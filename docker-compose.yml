version: "3.2"

# list of containers to be run
services:
  recommendationapp:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: recommendationapp
    environment:
      AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'
    ports:
      - "5000:5000"

  # rabbit_mq container uses the default rabbitmq image
  # exposes the ports
  # uses the specified volume
  rabbit_mq:

    # we use management image to get the
    # plugin for web dashboard
    image: rabbitmq:3.12.0-management
    container_name: rabbit_mq
    ports:
        - '5672:5672'
        - '15672:15672'
    volumes:
      - rabbit_mqdata:/usr/share/rabbitmq/data

  # consumer container builds the consumer image
  # and consumes messages from the queue
  # we spawn 2 consumer containers to run parallely
  # on the same queue
  consumer1:
    build:
      dockerfile: Dockerfile_consumer
    depends_on:
        - rabbit_mq
    environment:
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'

  consumer2:
    build:
      dockerfile: Dockerfile_consumer
    depends_on:
        - rabbit_mq
    environment:
        AMQP_URL: 'amqp://rabbit_mq?connection_attempts=10&retry_delay=10'

volumes:
    rabbit_mqdata:
      driver: local